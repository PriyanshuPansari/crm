"""convert_user_org_to_many_to_many

Revision ID: 933103c015c6
Revises: 5a6df74c1659
Create Date: 2025-09-02 00:21:51.464980

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '933103c015c6'
down_revision: Union[str, None] = '5a6df74c1659'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, create the new association table
    op.create_table('user_organizations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Migrate existing user-organization relationships
    connection = op.get_bind()
    connection.execute(sa.text("""
        INSERT INTO user_organizations (id, user_id, organization_id, joined_at)
        SELECT gen_random_uuid(), id, organization_id, created_at
        FROM users 
        WHERE organization_id IS NOT NULL
    """))
    
    # Now drop the old foreign key and column
    op.drop_constraint('users_organization_id_fkey', 'users', type_='foreignkey')
    op.drop_column('users', 'organization_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add back the organization_id column
    op.add_column('users', sa.Column('organization_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('users_organization_id_fkey', 'users', 'organizations', ['organization_id'], ['id'])
    
    # Migrate data back (taking the first organization for each user)
    connection = op.get_bind()
    connection.execute(sa.text("""
        UPDATE users 
        SET organization_id = uo.organization_id
        FROM (
            SELECT DISTINCT ON (user_id) user_id, organization_id 
            FROM user_organizations 
            ORDER BY user_id, joined_at
        ) uo
        WHERE users.id = uo.user_id
    """))
    
    # Drop the association table
    op.drop_table('user_organizations')
    # ### end Alembic commands ###
